console.log('This site was generated by Hugo.');

document.addEventListener("DOMContentLoaded", function () {
  const loaderOverlay = document.getElementById('loader-overlay');
  
  // Delay fade-out to match animation duration
  setTimeout(() => {
    loaderOverlay.style.opacity = "0";
    loaderOverlay.style.pointerEvents = "none";
  }, 2000); // Matches the logo-slide animation timing
});

document.addEventListener('scroll', function () {
  const navbar = document.querySelector('.navbar');
  const logo = document.getElementById("navbar-logo");
  if (!logo) return;
  // Get the logo paths from data attributes
  const defaultLogo = logo.dataset.default;
  const scrolledLogo = logo.dataset.scrolled;

  const logoicon = document.getElementById("logoicon");
  if (!logoicon) return;
  // get logicon paths from data attributes
  const defaultlogicon = logoicon.dataset.default;
  const scrolledlogicon = logoicon.dataset.scrolled;


  if (window.scrollY > 100) { // Adjust the scroll threshold as needed
    navbar.classList.add('scrolled');
    logo.src = scrolledLogo;
    logoicon.src = scrolledlogicon;
  } else {
    navbar.classList.remove('scrolled');
    logo.src = defaultLogo;
    logoicon.src = defaultlogicon;
  }
});

// Close navbar when clicking outside
document.addEventListener('click', (event) => {
  const navbar = document.querySelector('.navbar');
  const navbarToggler = document.querySelector('.navbar-toggler');
  const navbarCollapse = document.querySelector('#navbarContent');

  // Check if the click is outside the navbar
  if (navbar && !navbar.contains(event.target)) {
    // Ensure the navbar toggler icon closes
    if (navbarToggler.classList.contains('collapsed') === false) {
      navbarToggler.classList.add('collapsed');
    }

    // Hide the navbar collapse if it is shown
    const bsCollapse = bootstrap.Collapse.getInstance(navbarCollapse);
    if (bsCollapse && navbarCollapse.classList.contains('show')) {
      bsCollapse.hide();
    }
  }
});


// Close other dropdowns when a new one is opened
document.querySelectorAll('.dropdown-toggle').forEach(dropdownToggle => {
  dropdownToggle.addEventListener('click', function () {
    const openDropdowns = document.querySelectorAll('.dropdown.show');
    openDropdowns.forEach(dropdown => {
      if (dropdown !== this.parentElement) {
        dropdown.classList.remove('show');
        const menu = dropdown.querySelector('.dropdown-menu');
        menu.classList.remove('show');
      }
    });
  });
});

// immersive vertical slider

// document.addEventListener("DOMContentLoaded", function () {
//   document.body.classList.add("scroll-locked");
//   const slider = document.querySelector(".immersive-slider");
//   const slides = document.querySelectorAll(".slide");
//   const dots = document.querySelectorAll(".slider-indicators .dot");
//   let currentIndex = 0;
//   let isScrolling = false;

//   // Detect if it's a mobile device
//   const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);

//   const updateSlide = (index) => {
//     slides.forEach((slide, i) => {
//       slide.classList.toggle("active", i === index);
//     });
//     dots.forEach((dot, i) => {
//       dot.classList.toggle("active", i === index);
//     });
//   };

//   // Lock scroll function
//   const lockScroll = (event) => {
//     event.preventDefault();
//     event.stopPropagation();
//   };

//   // Auto-slide for mobile devices
//   if (isMobile) {
//     const autoSlideInterval = setInterval(() => {
//       if (currentIndex < slides.length - 1) {
//         currentIndex++;
//         updateSlide(currentIndex);
//       } else {
//         clearInterval(autoSlideInterval); // Stop auto-slide after the last slide
//         document.body.classList.remove("scroll-locked");
//       }
//     }, 3000); // Change slides every 3 seconds

//     // Stop auto-slide on manual interaction
//     dots.forEach((dot, i) => {
//       dot.addEventListener("click", () => {
//         clearInterval(autoSlideInterval);
//         currentIndex = i;
//         updateSlide(currentIndex);
//       });
//     });

//     // Swipe support for mobile
//     let touchStartX = 0;
//     slider.addEventListener("touchstart", (e) => {
//       touchStartX = e.touches[0].clientX;
//     });

//     slider.addEventListener("touchend", (e) => {
//       const touchEndX = e.changedTouches[0].clientX;
//       const deltaX = touchEndX - touchStartX;

//       if (deltaX > 50 && currentIndex > 0) {
//         clearInterval(autoSlideInterval); // Stop auto-slide
//         currentIndex--; // Swipe Right: Previous Slide
//         updateSlide(currentIndex);
//       } else if (deltaX < -50 && currentIndex < slides.length - 1) {
//         clearInterval(autoSlideInterval); // Stop auto-slide
//         currentIndex++; // Swipe Left: Next Slide
//         updateSlide(currentIndex);
//       }
//     });
//   } else {
//     // Desktop behavior with scroll-lock
//     const onScroll = (event) => {
//       const delta = event.deltaY || event.detail || event.wheelDelta;

//       if (isScrolling) return;

//       if (delta > 0 && currentIndex < slides.length - 1) {
//         currentIndex++;
//       } else if (delta < 0 && currentIndex > 0) {
//         currentIndex--;
//       } else if (delta > 0 && currentIndex === slides.length - 1) {
//         document.body.classList.remove("scroll-locked");
//         document.removeEventListener("wheel", lockScroll, { passive: false });
//       }

//       updateSlide(currentIndex);
//       isScrolling = true;

//       setTimeout(() => {
//         isScrolling = false;
//       }, 800); // Match CSS animation duration
//     };

//     // Lock scroll initially
//     document.addEventListener("wheel", lockScroll, { passive: false });

//     // Attach custom scroll event for slider
//     document.addEventListener("wheel", onScroll, { passive: true });

//     // Remove scroll lock after all slides are done
//     setTimeout(() => {
//       document.removeEventListener("wheel", lockScroll, { passive: false });
//     }, slides.length * 1000);
//   }

//   // Initial setup
//   updateSlide(currentIndex);
// });
